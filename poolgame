import pygame 
import pymunk
import pymunk.pygame_util

pygame.init()

SCREEN_WIDTH=1200
SCREEN_HEIGHTT= 678

#GAME WINDOW
screen=pygame.display.set_mode(( SCREEN_WIDTH, SCREEN_HEIGHTT ))
pygame.display.set_caption('pool')

#pymunk space
space = pymunk.Space()
static_body = space.static_body
draw_OPTION = pymunk.pygame_util.DrawOptions(screen)

#clock
clock = pygame.time.Clock( )
FPS=120

#colour
BG = (50,50,50)

#load images
table_images = pygame.image.load("pygame/pool/image/table.PNG").convert_alpha()

#function fro creating baals
def creat_ball(radius, pos):
    body = pymunk.Body()
    body.position = pos
    shape = pymunk.Circle(body, radius)
    shape.mass = 5
    #use pivoit joint to add friction
    piviot = pymunk.PivotJoint(static_body, body, (0, 0),(0,0))
    piviot.max_bias = 0 # disable joint corrction
    piviot.max_force = 1000 # emulate linear friction

    space.add(body, shape, piviot)
    return shape

new_ball = creat_ball(25,(300,300))


cue_ball = creat_ball(25, (600, 310))
 # function for creating cushion
 

#game loop
run= True
while run:
    clock.tick(FPS)
    space.step(1/FPS )

    #fill background
    screen.fill(BG)


    #draw pooltable
    screen.blit(table_images, (0,0))


    #event handler
    for event in pygame.event.get():
        if event.type== pygame.MOUSEBUTTONDOWN:
            cue_ball.body.apply_impulse_at_local_point((-1500, 0),(0,0))
        if event.type == pygame.QUIT:
            run= False

    space.debug_draw(draw_OPTION)
    pygame.display.update()


pygame.quit


